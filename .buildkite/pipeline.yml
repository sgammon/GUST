##
# Copyright Â© 2020, The Gust Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

steps:
  - command: "make build CI=yes QUIET=no"
    label: ":bazel: Build: Framework"
    key: framework-build

  - command: "make build test report-coverage report-tests CI=yes QUIET=no"
    label: ":coverage: Testsuite"
    depends_on: framework-build
    artifact_paths:
      - "reports/coverage/index.html"
      - "reports/coverage.tar.gz"
      - "reports/tests.xml.html"

  - command: "make build CI=yes TARGETS='//samples/rest_mvc/java:MicronautMVCSample-native-bin' && make build CI=yes TARGETS='//samples/soy_ssr/src:MicronautSSRSample-native-bin'"
    label: ":java: Build: Native Binaries"
    depends_on: framework-build
    if: build.branch == "native"
    key: native-build
    soft_fail:
      - exit_status: 2

  - wait

  - command: "docker pull us.gcr.io/elide-tools/base/alpine"
    label: ":docker: Pull Bases"

  - command: "make build samples CI=yes"
    label: ":gcloud: Publish: Images"
    depends_on: native-build
    if: build.branch == "native"
    soft_fail:
      - exit_status: 2

  - command: "echo 'registry=https://npm.pkg.github.com/sgammon' > .npmrc && npm publish"
    label: ":octocat: + :npm: Staging: NPM"
    if: build.tag != null

  - command: "./gradlew build publish -Pgithub=true -Psigning=false"
    label: ":octocat: + :mvn: Staging: Maven"
    if: build.tag != null

  - command: "make release-images CI=yes REGISTRY=docker.pkg.github.com/sgammon/gust"
    label: ":octocat: + :whale: Staging: Docker"
    if: build.tag != null

  - input: "Request Release"
    if: build.tag != null
    fields:
      - select: "Stream"
        key: "release-stream"
        hint: "Which release stream does this belong in? :fork:"
        options:
          - label: "Beta"
            value: "beta"
          - label: "Stable"
            value: "stable"

  - command: "rm -f .npmrc && rm -f package.json && cp -fv package-global.json package.json && npm publish"
    label: ":npm: Release: NPM"
    if: build.tag != null

  - command: "make release-images CI=yes"
    label: ":docker: Release: Docker"
    depends_on: native-build
    if: build.tag != null
