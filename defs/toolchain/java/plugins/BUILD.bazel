##
# Copyright Â© 2020, The Gust Framework Authors. All rights reserved.
#
# The Gust/Elide framework and tools, and all associated source or object computer code, except where otherwise noted,
# are licensed under the Zero Prosperity license, which is enclosed in this repository, in the file LICENSE.txt. Use of
# this code in object or source form requires and implies consent and agreement to that license in principle and
# practice. Source or object code not listing this header, or unless specified otherwise, remain the property of
# Elide LLC and its suppliers, if any. The intellectual and technical concepts contained herein are proprietary to
# Elide LLC and its suppliers and may be covered by U.S. and Foreign Patents, or patents in process, and are protected
# by trade secret and copyright law. Dissemination of this information, or reproduction of this material, in any form,
# is strictly forbidden except in adherence with assigned license requirements.
##

package(
    default_visibility = ["//visibility:public"],
)

load(
    "@rules_java//java:defs.bzl",
    "java_plugin",
    "java_library",
)

load(
    "//defs/toolchain:deps.bzl",
    "maven",
)


java_library(
    name = "micronaut-inject",
    exports = [
        "@javax_annotation_api",
        maven("io.micronaut:micronaut-core"),
        maven("io.micronaut:micronaut-inject"),
        maven("io.micronaut:micronaut-inject-java"),
        maven("io.micronaut:micronaut-validation"),
        maven("io.micronaut.data:micronaut-data-processor"),
    ],
    runtime_deps = [
        "@javax_annotation_api",
        maven("io.micronaut:micronaut-core"),
        maven("io.micronaut:micronaut-inject"),
        maven("io.micronaut:micronaut-inject-java"),
        maven("io.micronaut:micronaut-validation"),
        maven("io.micronaut:micronaut-graal"),
        maven("io.micronaut.data:micronaut-data-processor"),
    ]
)

java_plugin(
    name = "micronaut-beans",
    generates_api = True,
    processor_class = "io.micronaut.annotation.processing.BeanDefinitionInjectProcessor",
    deps = [":micronaut-inject"],
)

java_plugin(
    name = "picocli-generator",
    generates_api = True,
    processor_class = "picocli.codegen.aot.graalvm.processor.NativeImageConfigGeneratorProcessor",
    deps = [
        maven("info.picocli:picocli"),
        maven("info.picocli:picocli-codegen"),
    ]
)

java_plugin(
    name = "micronaut-types",
    generates_api = True,
    processor_class = "io.micronaut.annotation.processing.TypeElementVisitorProcessor",
    deps = [":micronaut-inject"],
)

java_plugin(
    name = "micronaut-config",
    generates_api = True,
    processor_class = "io.micronaut.annotation.processing.PackageConfigurationInjectProcessor",
    deps = [":micronaut-inject"],
)

java_library(
    name = "micronaut",
    exports = [
        maven("io.micronaut:micronaut-core"),
        maven("io.micronaut:micronaut-inject"),
        maven("io.micronaut:micronaut-inject-java"),
    ],
    exported_plugins = [
        ":micronaut-beans",
        ":micronaut-types",
        ":micronaut-config",
    ],
)

java_library(
    name = "picocli",
    exports = [
        maven("info.picocli:picocli"),
    ],
    exported_plugins = [
        ":picocli-generator",
    ],
)
